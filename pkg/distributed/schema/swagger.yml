openapi: '3.0.2'
info:
  title: API Title
  version: '1.0'
servers:
  - url: https://api.server.test/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  responses:
    ResponseNotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
  
    ResponseUnprocessableEntity:
      description: Response caused by some validation errors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
   
  
    ResponseUnauthorized:
      description: Response caused by invalid (or missing) access token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
   
    ResponseSegment:
      description: ConvertSegment object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConvertSegment'
            
    ResponseAllocateAuthority:
      description: Success authority allocattion
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authority'
            
    ResponseCreateSession:
      description: Success session creation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Session'
  
  parameters:
    segmentIdParam:
      name: id
      in: path
      description: Segment ID
      required: true
      schema:
        type: string
        format: uuid
      
  schemas:
    ProblemDetails:
      description: RFC 7807 Problem Details for HTTP APIs
      type: object
      required:
        - title
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        fields:
          type: object
          additionalProperties:
            type: string
  
    ConvertSegment: 
      type: object
      required:
        - type
        - id
        - order_id
        - params
        - muxer
        - position
      properties:
        type:
          type: string
          enum: 
            - convert/v1
        id:
          type: string
          format: uuid
        order_id:
          type: string
          format: uuid
        params:
          required: true
          $ref: '#/components/schemas/ConvertParams'
        muxer:
          type: string
          example: 'mp4'
        position:
          type: integer
          minimum: 0
          
    Authority:
      type: object
      required:
        - key
      properties:
        key:
          type: string
          
    Session:
      type: object
      required:
        - key
      properties:
        key:
          type: string
          
    AuthorityInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minimum: 1
          
    SessionInput:
      type: object
      required:
        - authority_key
      properties:
        authority_key:
          type: string
          
    ConvertParams:     
      type: object
      required:
        - video_codec
        - hw_accel
        - video_bit_rate
        - video_quality
        - preset
        - scale
        - keyframe_interval
      properties:
        video_codec:
          type: string
          enum:
            - h264
            - hevc
        hw_accel:
          type: string
          enum: 
            - nvenc
            - videotoolbox
        video_bit_rate:
          type: string
          example: '14M'
        video_quality:
          type: integer
          minimum: 1
          maximum: 50
        preset:
          type: string
          enum:
            - slow
            - medium
            - fast
        scale:
          type: string
          enum:
            - '1/2'
            - '1/4'
        keyframe_interval:
          type: integer
          minimum: 0
    
    ConvertDealerRequest:
      type: object
      required:
        - type
        - id
        - order_id
        - params
        - muxer
        - position
      properties:
        type:
          type: string
          enum: 
            - convert/v1
        id:
          type: string
          format: uuid
        order_id:
          type: string
          format: uuid
        params:
          required: true
          $ref: '#/components/schemas/ConvertParams'
        muxer:
          type: string
          example: 'mp4'
        position:
          type: integer
          minimum: 0
        
paths:
  /authorities:
    post:
      operationId: allocateAuthority
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorityInput'
      responses:
        '200':
          $ref: '#/components/responses/ResponseAllocateAuthority'
        '422':
          $ref: '#/components/responses/ResponseUnprocessableEntity'
 
  /sessions:
    post:
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionInput'
      responses:
        '200':
          $ref: '#/components/responses/ResponseCreateSession'
        '422':
          $ref: '#/components/responses/ResponseUnprocessableEntity'
        '401':
          $ref: '#/components/responses/ResponseUnauthorized'
 
  /segments/free:
    post:
      security:
        - bearerAuth: []
      operationId: findFreeSegment
      responses:
        '200':
          $ref: '#/components/responses/ResponseSegment'
        '404':
          $ref: '#/components/responses/ResponseNotFound'
        '401':
          $ref: '#/components/responses/ResponseUnauthorized'
        
  /segments:
    post:
      operationId: allocateSegment
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertDealerRequest'
      responses:
        '200':
          $ref: '#/components/responses/ResponseSegment'
        '422':
          $ref: '#/components/responses/ResponseUnprocessableEntity'
        '401':
          $ref: '#/components/responses/ResponseUnauthorized'
          
  /segments/{id}:
    get:
      security:
        - bearerAuth: []
      operationId: getSegmentByID
      parameters:
        - $ref: '#/components/parameters/segmentIdParam'
      responses:
        '200':
          $ref: '#/components/responses/ResponseSegment'
        '404':
          $ref: '#/components/responses/ResponseNotFound'
        '401':
          $ref: '#/components/responses/ResponseUnauthorized'
